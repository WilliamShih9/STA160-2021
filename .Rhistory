mydata = read_csv("Airbnb_NYC_2019.csv")
library(tidyverse)
library(ggplot2)
install.packages("broom")
library(tidyverse)
library(ggplot2)
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata
plot(mydata, mydata$price)
plot(mydata, mydata$price)
?plot
hist(mydata$price)
hist(mydata$price[mydata$price < 2000])
hist(mydata$reviews_per_month)
hist(log(mydata$reviews_per_month))
hist(log(mydata$price))
hist(log(mydata$reviews))
hist(log(mydata$number_of_reviews))
boxcox.fit(mydata$number_of_reviews)
library(geoR)
install.packages("geoR")
boxcox.fit(mydata$number_of_reviews)
library(geoR)
boxcox.fit(mydata$number_of_reviews)
boxcoxfit(mydata$number_of_reviews)
mydata$number_of_reviews[is.na(mydata$number_of_reviews)] = 0
boxcoxfit(mydata$number_of_reviews)
boxcoxfit(mydata$number_of_reviews)
mydata$number_of_reviews
boxcoxfit(mydata$number_of_reviews)
range(mydata$number_of_reviews)
boxcoxfit(mydata$number_of_reviews)
?boxcoxfit
boxcoxfit(mydata$number_of_reviews, lambda2 = TRUE)
boxcoxfit(mydata$number_of_reviews, lambda2 = TRUE)
boxcoxfit(mydata$price, lambda2 = TRUE)
boxcoxfit(mydata$availability_365, lambda2 = TRUE)
boxcoxfit(mydata$minimum_nights, lambda2 = TRUE)
?cut
data1 = mydata[,c(5:6, 9:16)]
# turn price into price ranges (categorical)
price_range = c()
for (i in 1:48895) {
if (data1$price[i] <= 50){
price_range = c(price_range, "1: 0-50")
} else if (data1$price[i] >50 & data1$price[i] < 100) {
price_range = c(price_range, "2: 50-100")
} else if (data1$price[i] >100 & data1$price[i] < 150) {
price_range = c(price_range, "3: 100-150")
} else if (data1$price[i] >150 & data1$price[i] < 200) {
price_range = c(price_range, "4: 150-200")
} else {
price_range = c(price_range, "5: 200 up")
}
}
data1 = cbind(data1, price_range)
data1$price_range
data = data1 %>%
mutate(price_range =
cut(price, breaks = c(50,100,150,200),
labels = c("0-50","50-100","100-150","150-200","200 up")))
data1 = data1 %>%
mutate(price_range =
cut(price, breaks = c(0,50,100,150,200,99999),
labels = c("0-50","50-100","100-150","150-200","200 up")))
data
mydata
mydata[7]
mydata[8]
g = boxcoxfit(mydata$availability_365, lambda2 = TRUE)
plot(g)
data1 = data1 %>%
mutate(price_range =
cut(price, breaks = c(0,50,100,150,200,99999),
labels = c("0-50","50-100","100-150","150-200","200 up")))
data1
data1$
mydata = read_csv("Airbnb_NYC_2019.csv")
data1 = data1 %>%
mutate(price_range =
cut(price, breaks = c(0,50,100,150,200,99999),
labels = c("0-50","50-100","100-150","150-200","200 up")))
data1
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata
data1 = mydata
data1
data1 = data1 %>%
mutate(price_range =
cut(price, breaks = c(0,50,100,150,200,99999),
labels = c("0-50","50-100","100-150","150-200","200 up")))
data1
table(data1$price_range)
for (i in 1:48895) {
if (data1$price[i] <= 50){
price_range = c(price_range, "1: 0-50")
} else if (data1$price[i] >50 & data1$price[i] < 100) {
price_range = c(price_range, "2: 50-100")
} else if (data1$price[i] >100 & data1$price[i] < 150) {
price_range = c(price_range, "3: 100-150")
} else if (data1$price[i] >150 & data1$price[i] < 200) {
price_range = c(price_range, "4: 150-200")
} else {
price_range = c(price_range, "5: 200 up")
}
}
price_range = c()
for (i in 1:48895) {
if (data1$price[i] <= 50){
price_range = c(price_range, "1: 0-50")
} else if (data1$price[i] >50 & data1$price[i] < 100) {
price_range = c(price_range, "2: 50-100")
} else if (data1$price[i] >100 & data1$price[i] < 150) {
price_range = c(price_range, "3: 100-150")
} else if (data1$price[i] >150 & data1$price[i] < 200) {
price_range = c(price_range, "4: 150-200")
} else {
price_range = c(price_range, "5: 200 up")
}
}
table(price_range)
table(data$price_range)
table(data1$price_range)
sum(table(data1$price_range))
sum(table(price_range))
boxcoxfit(mydata$number_of_reviews, lambda2 = TRUE)
filtered = filter(mydata, price > 0 & price <= 3000 &
minimum_nights <= 90 & reviews_per_month <= 21)
grubbs.test(mydata$minimum_nights)
install.packages("outliers")
grubbs.test(mydata$minimum_nights)
library(outliers)
grubbs.test(mydata$minimum_nights)
grubbs.test(mydata$minimum_nights)
grubbs.test(filtered$minimum_nights)
library(EnvStats)
install.packages("EnvStats")
library(EnvStats)
rosnerTest(mydata$reviews_per_month)
rosnerTest(mydata$price)
rosnerTest(mydata$price, k = 100)
rosnerTest(mydata$reviews_per_month, k = 100)
boxplot(mydata$reviews_per_month)$out
boxplot(mydata$reviews_per_month)$out
boxplot(mydata$reviews_per_month)$out
boxplot(mydata$reviews_per_month)$out
rosnerTest(mydata$reviews_per_month, k = 100)
filtered = filter(mydata, price > 0 & price <= 3000 &
minimum_nights <= 90 & reviews_per_month <= 15)
rosnerTest(filtered$reviews_per_month, k = 100)
rosnerTest(filtered$minimum_nights, k = 100)
gr(filtered$minimum_nights, k = 100)
grubbs.test(filtered$minimum_nights)
grubbs.test(filtered$minimum_nights[filtered$minimum_nights < 20])
grubbs.test(filtered$minimum_nights[filtered$minimum_nights < 30])
filtered = filter(mydata, price > 0 & price <= 3000 &
minimum_nights <= 60 & reviews_per_month <= 15)
filtered$minimum_nights
grubbs.test(filtered$minimum_nights)
grubbs.test(filtered$price)
grubbs.test(filtered$price[filtered$price < 1000])
grubbs.test(mydata$price)
grubbs.test(mydata$reviews_per_month)
grubbs.test(filtered$reviews_per_month)
grubbs.test(filtered$number_of_reviews)
boxcoxfit(filtered$number_of_reviews, lambda2 = TRUE)
boxcoxfit(filtered$reviews_per_month, lambda2 = TRUE)
boxcoxfit(filtered$price, lambda2 = TRUE)
boxcoxfit(filtered$minimum_nights, lambda2 = TRUE)
filtered$reviews_per_month
grubbs.test(filtered$number_of_reviews)
length(is.na(filtered$reviews_per_month))
length(is.na(filtered$reviews_per_month))
filtered$reviews_per_month
length(is.na(filtered$reviews_per_month))
sum(is.na(filtered$reviews_per_month))
sum(is.na(filtered$reviews_per_month))
filtered$number_of_reviews == 0
filtered$number_of_reviews == 0
is.na(mydata)
summary(mydata)
summary(filtered)
mydata$reviews_per_month = replace_na(mydata$reviews_per_month, 0)
summary(mydata)
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata = select(mydata, -last_review)
mydata$reviews_per_month = replace_na(mydata$reviews_per_month, 0)
filtered = filter(mydata, price > 0 & price <= 3000 &
minimum_nights <= 60 & reviews_per_month <= 15)
boxcoxfit(filtered$number_of_reviews, lambda2 = TRUE)
boxcoxfit(filtered$reviews_per_month, lambda2 = TRUE)
boxcoxfit(filtered$price, lambda2 = TRUE)
boxcoxfit(filtered$minimum_nights, lambda2 = TRUE)
boxcoxfit(filtered$calculated_host_listings_count, lambda2 = TRUE)
filtered$calculated_host_listings_count
filtered$calculated_host_listings_count
boxcoxfit(filtered$calculated_host_listings_count, lambda2 = TRUE)
?boxcoxfit
dboxcox
?curve
?dboxcox
?boxcoxfit
library(MASS)
boxcox(filtered$number_of_reviews)
boxcox(filtered$number_of_reviews)
filtered$number_of_reviews
boxcox(number_of_reviews, data = filtered)
boxcox(number_of_reviews, data = filtered)
?boxcox
boxcox(~ number_of_reviews, data = filtered)
boxcox(number_of_reviews~1, data = filtered)
boxcox(price~1, data = filtered)
boxcox((number_of_reviews + 0.00001)~1, data = filtered)
boxcox((reviews_per_month + 0.00001)~1, data = filtered)
boxcox((reviews_per_month + 0.00001)~1, data = filtered)
boxcox((reviews_per_month + 0.00001)~1, data = filtered)
boxcox((minimum_nights + 0.00001)~1, data = filtered)
boxcox((availability_365 + 0.00001)~1, data = filtered)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(geoR)
# read data
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata = select(mydata, -last_review)
names(mydata)
library(tidyverse)
library(ggplot2)
library(geoR)
# read data
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata = select(mydata, -c(id, host_id, last_review))
library(tidyverse)
library(ggplot2)
library(geoR)
library(tidyverse)
library(ggplot2)
library(geoR)
# read data
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata = dplyr::select(mydata, -c(id, host_id, last_review))
mydata$reviews_per_month = replace_na(mydata$reviews_per_month, 0)
filtered = filter(mydata, price > 0 & price <= 3000 &
minimum_nights <= 60 & reviews_per_month <= 15)
boxcoxfit(filtered$number_of_reviews, lambda2 = TRUE)
boxcoxfit(filtered$reviews_per_month, lambda2 = TRUE)
boxcoxfit(filtered$price, lambda2 = TRUE)
boxcoxfit(filtered$minimum_nights, lambda2 = TRUE)
boxcoxfit(filtered$calculated_host_listings_count, lambda2 = TRUE)
boxcox((calculated_host_listings_count + 0.00001)~1, data = filtered)
mydata = read_csv("Airbnb_NYC_2019.csv")
mydata = dplyr::select(mydata, -c(id, host_id, last_review))
mydata$reviews_per_month = replace_na(mydata$reviews_per_month, 0)
filtered = filter(mydata, price > 0 & price <= 3000 &
minimum_nights <= 60 & reviews_per_month <= 15)
boxcoxfit(filtered$number_of_reviews, lambda2 = TRUE)
boxcoxfit(filtered$reviews_per_month, lambda2 = TRUE)
boxcoxfit(filtered$price, lambda2 = TRUE)
boxcoxfit(filtered$minimum_nights, lambda2 = TRUE)
boxcoxfit(filtered$calculated_host_listings_count, lambda2 = TRUE)
length(filtered)
nrow(filtered)
nrow(mydata)
filtered$minimum_nights
filtered$minimum_nights
data1
lm(price ~ neigbourhood, data = data1)
lm(price ~ neighbourhood, data = data1)
a = lm(price ~ neighbourhood, data = filtered)
summary(a)
lm(price ~ neigbourhood, data = data1)
lm(price ~ neigbourhood, data = data1)
z= lm(log(price) ~ neigbourhood, data = data1)
z= lm(log(price) ~ neighbourhood, data = data1)
z= lm(log(price) ~ neighbourhood, data = filtered)
summary(z)
z= lm(log(price) ~ ., data = filtered)
z= lm(log(price) ~ , data = filtered)
filt = dplyr::select(filtered, -c(name, host_name))
z= lm(log(price) ~ , data = filtered)
z= lm(log(price) ~ ., data = filt)
summary(z)
filt = dplyr::select(filtered, -c(name, host_name, neighbourhood_group))
z= lm(log(price) ~ ., data = filt)
summary(filt)
summary(z)
filt = dplyr::select(filtered, -c(name, host_name, neighbourhood))
z= lm(log(price) ~ ., data = filt)
filt = dplyr::select(filtered, -c(name, host_name, neighbourhood))
z= lm(log(price) ~ ., data = filt)
summary(z)
z= lm(price ~ ., data = filt)
summary(z)
boxcox(lm(price ~ ., data = test_filt))
test_filt = dplyr::select(filtered, -c(name, host_name, neighbourhood))
summary(lm(price ~ ., data = test_filt))
library(car)
install.packages("car")
library(car)
box.tidwell(price ~. , data = test_filt)
boxTidwell(price ~. , data = test_filt)
?glm
summary(glm(price ~ ., data = test_filt, family = gaussian("log")))
other_filt = test_filt
other_filt$room_type
other_filt = other_filt %>%
mutate(room_type =
dplyr::recode(room_type, 'Entire home/apt' = 3,
'Private room' = 2,
'Shared room' = 1))
other_filt$room_type
table(other_filt$room_type)
table(test_filt$room_type)
summary(lm(price ~ ., data = other_filt))
summary(lm(price ~ ., data = test_filt))
summary(lm(log(price) ~ ., data = other_filt))
summary(lm(log(price) ~ ., data = test_filt))
summary(glm(price ~ ., data = other_filt, family = gaussian("log")))
summary(glm(price ~ ., data = test_filt, family = gaussian("log")))
geohash
?geohash
geohash(l)
